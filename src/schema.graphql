enum Permission {
  ADMIN
  USER
  ITEMCREATE
  ITEMUPDATE
  ITEMDELETE
  PREMISSIONUPDATE
}

type User {
  id: ID!
  name: String!
  email: String!
  permissions: [Permission]
  items: [Item]!
}

type Item {
  id: ID!
  title: String!
  description: String!
  image: String
  largeImage: String
  price: Int!
  createdAt: String!
  updatedAt: String!
  user: User!
}

type Aggregate {
  count: Int!
}

type ItemsConnection {
  aggregate: Aggregate
}

enum OrderByInput {
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type DeleteResponse {
  id: String!
}

type SuccessMessage {
  message: String
}

type Query {
  items(orderBy: OrderByInput, skip: Int, first: Int): [Item]!
  item(id: ID!): Item
  itemsConnection: ItemsConnection
  me: User
  users: [User]!
  test: String
}

type Mutation {
  createItem(
    title: String!
    description: String!
    price: Int!
    image: String
    largeImage: String
  ): Item!
  updateItem(id: ID!, title: String, description: String, price: Int): Item!
  deleteItem(id: ID!): DeleteResponse!
  signup(email: String!, password: String!, name: String!): User!
  signin(email: String!, password: String!): User
  signout: SuccessMessage
  requestReset(email: String!): SuccessMessage
  resetPassword(
    token: String!
    password: String!
    confirmPassword: String!
  ): User!
  updatePermissions(permissions: [Permission], userId: ID!): User
}
